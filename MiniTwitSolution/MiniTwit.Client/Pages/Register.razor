@page "/register"
@inject HttpClient Http
@inject NavigationManager NavigationManager

<title>Register</title>

<h2>Register</h2>

@if (!string.IsNullOrEmpty(ErrorMessage))
{
<div class="error">@ErrorMessage</div>
}

<EditForm Model="RegisterRequest" OnValidSubmit="HandleRegister">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div>
        <label for="username">Username:</label>
        <InputText id="username" @bind-Value="RegisterRequest.Username" />
    </div>

    <div>
        <label for="email">Email:</label>
        <InputText id="email" @bind-Value="RegisterRequest.Email" />
    </div>

    <div>
        <label for="password">Password:</label>
        <InputPassword id="password" @bind-Value="RegisterRequest.Password" />
    </div>

    <div>
        <label for="password2">Password (Repeat):</label>
        <InputPassword id="password2" @bind-Value="RegisterRequest.Password2" />
    </div>

    <button type="submit">Register</button>
</EditForm>

@code {
private RegisterUserRequest RegisterRequest = new RegisterUserRequest();
private string ErrorMessage;

// Define the registration request model
public class RegisterUserRequest
{
public string Username { get; set; }
public string Email { get; set; }
public string Password { get; set; }
public string Password2 { get; set; }
}

// Handle registration
private async Task HandleRegister()
{
if (RegisterRequest.Password != RegisterRequest.Password2)
{
ErrorMessage = "Passwords do not match.";
return;
}

try
{
// Make the API call to the /register endpoint
var response = await Http.PostAsJsonAsync("/register", RegisterRequest);

if (response.IsSuccessStatusCode)
{
// Successful registration, redirect to login page
NavigationManager.NavigateTo("/login");
}
else if (response.StatusCode == System.Net.HttpStatusCode.Conflict)
{
// Username or email already exists
ErrorMessage = "A user with the same email or username already exists.";
}
else
{
// Some unexpected error
ErrorMessage = "An error occurred. Please try again later.";
}
}
catch (Exception ex)
{
// Handle network or other issues
ErrorMessage = "An error occurred. Please try again later.";
}
}
}
