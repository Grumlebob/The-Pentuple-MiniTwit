@page "/login"
@inject HttpClient Http
@inject NavigationManager NavigationManager

<title>Login</title>

<h2>Login</h2>

@if (!string.IsNullOrEmpty(ErrorMessage))
{
    <div class="error">@ErrorMessage</div>
}

<EditForm Model="LoginRequest" OnValidSubmit="HandleLogin">
    <DataAnnotationsValidator/>
    <ValidationSummary/>

    <div>
        <label for="email">Email:</label>
        <InputText id="email" @bind-Value="LoginRequest.Email"/>
    </div>

    <div>
        <label for="password">Password:</label>
        <InputPassword id="password" @bind-Value="LoginRequest.Password"/>
    </div>

    <button type="submit">Login</button>
</EditForm>

@code {
    private LoginUserRequest LoginRequest = new LoginUserRequest();
    private string ErrorMessage;

// Define the login request model
    public class LoginUserRequest
    {
        public string Email { get; set; }
        public string Password { get; set; }
    }

// Handle login
    private async Task HandleLogin()
    {
        var response = await Http.PostAsJsonAsync("/login", LoginRequest);

        if (response.IsSuccessStatusCode)
        {
            NavigationManager.NavigateTo("/public");
        }
        else if (response.StatusCode == System.Net.HttpStatusCode.Unauthorized)
        {
// Invalid credentials
            ErrorMessage = "Invalid email or password.";
        }
        else if (response.StatusCode == System.Net.HttpStatusCode.NotFound)
        {
// User not found
            ErrorMessage = "User not found.";
        }
        else
        {
// Some unexpected error
            ErrorMessage = "An error occurred. Please try again later.";
        }
    }

}

