# -*- mode: ruby -*-
# vi: set ft=ruby :

Vagrant.configure("2") do |config|
  config.vm.box = 'digital_ocean'
  config.vm.box_url = "https://github.com/devopsgroup-io/vagrant-digitalocean/raw/master/box/digital_ocean.box"
  config.ssh.private_key_path = '~/.ssh/do_ssh_key'
  
  # Sync folders: remote_files to /minitwit and entire repo to /vagrant
  config.vm.synced_folder "remote_files", "/minitwit", type: "rsync"
  config.vm.synced_folder ".", "/vagrant", type: "rsync"
    
  config.vm.define "minitwit", primary: true do |server|
    # DigitalOcean Provider Configuration
    server.vm.provider :digital_ocean do |provider|
      provider.ssh_key_name = ENV["SSH_KEY_NAME"]
      provider.token = ENV["DIGITAL_OCEAN_TOKEN"]
      provider.image = 'ubuntu-22-04-x64'
      provider.region = 'fra1'  # Frankfurt region
      provider.size = 's-2vcpu-2gb'  # Droplet size
      provider.private_networking = true
    end

    # Append environment variable definitions only if they don't exist already
    {
      "DOCKER_USERNAME"     => ENV["DOCKER_USERNAME"],
      "DOCKER_PASSWORD"     => ENV["DOCKER_PASSWORD"],
      "MINITWIT_DB_USER"    => ENV["MINITWIT_DB_USER"],
      "MINITWIT_DB_PASSWORD"=> ENV["MINITWIT_DB_PASSWORD"]
    }.each do |var, val|
      server.vm.provision "shell", inline: <<-SHELL
        grep -qxF 'export #{var}=#{val}' ~/.bash_profile || echo 'export #{var}=#{val}' >> ~/.bash_profile
      SHELL
    end

    # Provisioning script for setting up the environment, debugging, and deployment
    server.vm.provision "shell", inline: <<-SHELL
      echo "Waiting for synced folders to be ready..."
      while [ ! -d "/vagrant/MiniTwit.Api" ]; do
        sleep 1
      done
      echo "Synced folder ready!"

      echo "Starting system update and prerequisite installation..."
      apt-get update
      apt-get install -y apt-transport-https ca-certificates curl software-properties-common
      echo "Prerequisites installed."

      echo "Installing Docker..."
      # Add Docker's GPG key only if it hasn't been added already.
      if ! apt-key list | grep -q 'Docker'; then
        curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
      fi
      # Add the Docker repository if not already present.
      if ! grep -q "download.docker.com" /etc/apt/sources.list /etc/apt/sources.list.d/*; then
        add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu jammy stable"
      fi
      apt-get update
      apt-get install -y docker-ce docker-ce-cli containerd.io
      usermod -aG docker vagrant
      echo "Docker installed."

      echo "Installing Docker Compose..."
      # Only install docker-compose if it's not already present.
      if [ ! -f /usr/local/bin/docker-compose ]; then
        curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
        chmod +x /usr/local/bin/docker-compose
      fi
      echo "Docker Compose installed."
      
      # Ensure deploy.sh is executable and then run it.
      chmod +x /minitwit/deploy.sh
      cd /minitwit
      ./deploy.sh

      echo "Vagrant setup and deployment completed."
    SHELL
  end
end
