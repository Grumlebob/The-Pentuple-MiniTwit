version: "3.8"

services:
  db:
    image: postgres:15-alpine
    container_name: minitwit_db
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=MiniTwitDb
    # (Optional) Healthcheck so other containers only start once DB is ready
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    ports:
      - "5432:5432"

  migrator:
    build:
      context: .
      dockerfile: Dockerfile.migrator
    environment:
      - ConnectionStrings__DefaultConnection=Host=db;Port=5432;Database=MiniTwitDb;Username=postgres;Password=postgres
    depends_on:
      db:
        condition: service_healthy

  api:
    build:
      context: .
      dockerfile: MiniTwit.Api/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Host=db;Port=5432;Database=MiniTwitDb;Username=postgres;Password=postgres
    depends_on:
      db:
        condition: service_healthy
      migrator:
        condition: service_started
    ports:
      - "5000:80"

  client:
    build:
      context: .
      dockerfile: MiniTwit.Client/Dockerfile
    ports:
      - "5001:80"

  simulator:
    build:
      context: ./Simulator
      dockerfile: Dockerfile
    environment:
      - SIMULATOR_HOST=http://api:80
    depends_on:
      - api
