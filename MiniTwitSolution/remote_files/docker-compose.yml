version: "3.8"

networks:
  main:

services:
  db:
    image: postgres:15-alpine
    container_name: minitwit_db
    networks:
      - main
    restart: always
    environment:
      - POSTGRES_USER=${MINITWIT_DB_USER}
      - POSTGRES_PASSWORD=${MINITWIT_DB_PASSWORD}
      - POSTGRES_DB=MiniTwitDb
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${MINITWIT_DB_USER}"]
      interval: 5s
      timeout: 5s
      retries: 5
    ports:
      - "5433:5432"

  migrator:
    image: ${DOCKER_USERNAME}/minitwit-migrator
    container_name: minitwit-migrator
    networks:
      - main
    # Wait for the database to be healthy
    depends_on:
      db:
        condition: service_healthy
    environment:
      - ConnectionStrings__DefaultConnection=Host=db;Port=5432;Database=MiniTwitDb;Username=${MINITWIT_DB_USER};Password=${MINITWIT_DB_PASSWORD}
      - ClientBaseUrl=https://whatever-url-or-placeholder # value must be set before it can build, but only api uses it
    # Mark migrator healthy only after /tmp/migrations_done is created
    healthcheck:
      test: ["CMD", "test", "-f", "/tmp/migrations_done"]
      interval: 10s
      timeout: 5s
      retries: 20
      start_period: 40s
      
  seq:
    image: datalust/seq:latest
    container_name: seq
    networks:
      - main
    restart: always
    environment:
        - ACCEPT_EULA=Y
    ports:
      - "5341:80"
      
  api:
    image: ${DOCKER_USERNAME}/minitwit-api
    container_name: minitwit-api
    networks:
      - main
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Host=db;Port=5432;Database=MiniTwitDb;Username=${MINITWIT_DB_USER};Password=${MINITWIT_DB_PASSWORD}
    # IMPORTANT: Wait for db (healthy) and migrator (healthy)
    depends_on:
      db:
        condition: service_healthy
      migrator:
        condition: service_healthy
      seq:
        condition: service_started
    ports:
      - "5002:8080"

  client:
    image: ${DOCKER_USERNAME}/minitwit-client
    container_name: minitwit-client
    networks:
      - main
    ports:
      - "5001:80"

  simulator:
    image: ${DOCKER_USERNAME}/minitwit-simulator
    container_name: minitwit-simulator
    networks:
      - main
    depends_on:
      api:
        condition: service_started
    environment:
      - SIMULATOR_HOST=http://api:8080
