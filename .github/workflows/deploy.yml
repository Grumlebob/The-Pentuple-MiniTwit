name: Deploy

on:
  #ensure build and test runs first
  workflow_run:
    workflows: ["Build and Test"]
    types:
      - completed

jobs:
  deploy:
    name: Deploy to DigitalOcean
    # only deploy on successful build test and push
    if: >
      ${{ github.event.workflow_run.conclusion == 'success' &&
          github.event.workflow_run.event == 'push' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Debug - List repository contents
        run: |
          echo "=== Repository Structure ==="
          find . -type f -name "deploy.sh" -o -name "docker-compose.yml" | sort
          echo ""
          echo "=== Content of MiniTwitSolution/remote_files directory ==="
          ls -la MiniTwitSolution/remote_files || echo "Directory not found"

      # Build & push steps for Migrator, API, Client, and Simulator images
      - name: Build & Push Migrator
        uses: docker/build-push-action@v6
        with:
          context: ./MiniTwitSolution
          file: ./MiniTwitSolution/Dockerfile.migrator
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/migratorimage:latest
          cache-from: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/migratorimage:buildcache
          cache-to: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/migratorimage:buildcache,mode=max

      - name: Build & Push API
        uses: docker/build-push-action@v6
        with:
          context: ./MiniTwitSolution
          file: ./MiniTwitSolution/MiniTwit.Api/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/apiimage:latest
          cache-from: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/apiimage:buildcache
          cache-to: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/apiimage:buildcache,mode=max

      - name: Build & Push Client
        uses: docker/build-push-action@v6
        with:
          context: ./MiniTwitSolution
          file: MiniTwitSolution/MiniTwit.Client/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/clientimage:latest
          cache-from: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/clientimage:buildcache
          cache-to: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/clientimage:buildcache,mode=max

      - name: Build & Push Simulator
        uses: docker/build-push-action@v6
        with:
          context: ./MiniTwitSolution/Simulator
          file: ./MiniTwitSolution/Simulator/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/simulatorimage:latest
          cache-from: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/simulatorimage:buildcache
          cache-to: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/simulatorimage:buildcache,mode=max

      - name: Configure SSH for deployment
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_KEY }}" > ~/.ssh/do_ssh_key
          chmod 600 ~/.ssh/do_ssh_key

      - name: Copy deployment script to server
        run: |
          echo "Copying deploy.sh to server..."
          if [ -f ./MiniTwitSolution/remote_files/deploy.sh ]; then
            scp -v -i ~/.ssh/do_ssh_key -o StrictHostKeyChecking=no ./MiniTwitSolution/remote_files/deploy.sh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:/minitwit/deploy.sh
            echo "Copy completed"
          else
            echo "ERROR: deploy.sh not found at expected location!"
            exit 1
          fi

      - name: Copy docker-compose.yml to server
        run: |
          echo "Copying docker-compose.yml to server..."
          if [ -f ./MiniTwitSolution/remote_files/docker-compose.yml ]; then
            scp -v -i ~/.ssh/do_ssh_key -o StrictHostKeyChecking=no ./MiniTwitSolution/remote_files/docker-compose.yml ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:/minitwit/docker-compose.yml
            echo "Copy completed"
          else
            echo "ERROR: docker-compose.yml not found at expected location!"
            echo "Will continue but deployment might fail"
          fi

      - name: Verify files on server
        run: |
          echo "Verifying files on server..."
          ssh -v ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} \
            -i ~/.ssh/do_ssh_key -o StrictHostKeyChecking=no \
            'echo "Files in /minitwit:"; ls -la /minitwit/; echo ""; echo "File permissions:"; stat /minitwit/deploy.sh || echo "deploy.sh not found"'

      - name: Deploy to Server
        run: |
          echo "Starting deployment..."
          ssh -v ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} \
            -i ~/.ssh/do_ssh_key -o StrictHostKeyChecking=no \
            'cd /minitwit && chmod +x deploy.sh && bash -x deploy.sh || { echo "DEPLOYMENT FAILED WITH ERROR $?"; cat deploy.sh; }'
